{"ast":null,"code":"import { heroApi } from '../api/api';\nconst SET_HEROES = \"SET_HEROES\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\nconst TAKE_HERO = \"TAKE_HERO\";\nconst UPDATE_INFO = 'UPDATE_INFO';\nlet initialState = {\n  heroes: [],\n  pageSize: 5,\n  totalHeroesCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  currentHero: 1\n};\n\nconst heroesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_HEROES:\n      {\n        return { ...state,\n          heroes: action.heroes\n        };\n      }\n\n    case SET_TOTAL_HEROES_COUNT:\n      {\n        return { ...state,\n          totalHeroesCount: action.totalHeroesCount\n        };\n      }\n\n    case TOOGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TAKE_HERO:\n      {\n        return { ...state,\n          currentHero: action.currentHero\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setHeroes = heroes => ({\n  type: SET_HEROES,\n  heroes\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalHeroesCount = totalHeroesCount => ({\n  type: SET_TOTAL_HEROES_COUNT,\n  totalHeroesCount\n});\nexport const setIsFetching = isFetching => ({\n  type: TOOGLE_IS_FETCHING,\n  isFetching\n});\nexport const setCurrentHero = currentHero => ({\n  type: TAKE_HERO,\n  currentHero\n});\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setIsFetching(true));\n    heroApi.getHeroes(currentPage, pageSize).then(data => {\n      dispatch(setIsFetching(false));\n      dispatch(setHeroes(data.heroes));\n      dispatch(setTotalHeroesCount(data.totalHeroesCount));\n      dispatch(setCurrentHero(data.heroes[1]));\n    });\n  };\n};\nexport default heroesReducer;","map":{"version":3,"sources":["D:/www/apache/Apache24/htdocs/superheroes/superheroes/src/redux/heroesReducer.js"],"names":["heroApi","SET_HEROES","SET_CURRENT_PAGE","SET_TOTAL_HEROES_COUNT","TOOGLE_IS_FETCHING","TAKE_HERO","UPDATE_INFO","initialState","heroes","pageSize","totalHeroesCount","currentPage","isFetching","currentHero","heroesReducer","state","action","type","setHeroes","setCurrentPage","setTotalHeroesCount","setIsFetching","setCurrentHero","getHeroesThunkCreator","dispatch","getHeroes","then","data"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,aAApB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,gBAAgB,EAAE,CAHH;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE,IALG;AAMfC,EAAAA,WAAW,EAAE;AANE,CAAnB;;AASA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKhB,UAAL;AAAgB;AACZ,eAAO,EAAC,GAAGc,KAAJ;AAAWP,UAAAA,MAAM,EAAEQ,MAAM,CAACR;AAA1B,SAAP;AACH;;AACD,SAAKL,sBAAL;AAA4B;AACxB,eAAO,EAAC,GAAGY,KAAJ;AAAWL,UAAAA,gBAAgB,EAAEM,MAAM,CAACN;AAApC,SAAP;AACH;;AACD,SAAKN,kBAAL;AAAyB;AACrB,eAAO,EAAC,GAAGW,KAAJ;AAAWH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA9B,SAAP;AACH;;AACD,SAAKP,SAAL;AAAe;AACX,eAAO,EAAC,GAAGU,KAAJ;AAAWF,UAAAA,WAAW,EAAEG,MAAM,CAACH;AAA/B,SAAP;AACH;;AACD;AACI,aAAOE,KAAP;AAdR;AAgBH,CAjBD;;AAoBA,OAAO,MAAMG,SAAS,GAAIV,MAAD,KAAa;AAClCS,EAAAA,IAAI,EAAEhB,UAD4B;AAChBO,EAAAA;AADgB,CAAb,CAAlB;AAGP,OAAO,MAAMW,cAAc,GAAIR,WAAD,KAAkB;AAC5CM,EAAAA,IAAI,EAAEf,gBADsC;AACpBS,EAAAA;AADoB,CAAlB,CAAvB;AAGP,OAAO,MAAMS,mBAAmB,GAAIV,gBAAD,KAAuB;AACtDO,EAAAA,IAAI,EAAEd,sBADgD;AACxBO,EAAAA;AADwB,CAAvB,CAA5B;AAGP,OAAO,MAAMW,aAAa,GAAIT,UAAD,KAAiB;AAC1CK,EAAAA,IAAI,EAAEb,kBADoC;AAChBQ,EAAAA;AADgB,CAAjB,CAAtB;AAGP,OAAO,MAAMU,cAAc,GAAIT,WAAD,KAAkB;AAC5CI,EAAAA,IAAI,EAAEZ,SADsC;AAC3BQ,EAAAA;AAD2B,CAAlB,CAAvB;AAIP,OAAO,MAAMU,qBAAqB,GAAG,CAACZ,WAAD,EAAcF,QAAd,KAA2B;AAC5D,SAAOe,QAAD,IAAc;AAChBA,IAAAA,QAAQ,CAACH,aAAa,CAAC,IAAD,CAAd,CAAR;AAEArB,IAAAA,OAAO,CAACyB,SAAR,CAAkBd,WAAlB,EAA+BF,QAA/B,EAAyCiB,IAAzC,CAA8CC,IAAI,IAAI;AAClDH,MAAAA,QAAQ,CAACH,aAAa,CAAC,KAAD,CAAd,CAAR;AACAG,MAAAA,QAAQ,CAACN,SAAS,CAACS,IAAI,CAACnB,MAAN,CAAV,CAAR;AACAgB,MAAAA,QAAQ,CAACJ,mBAAmB,CAACO,IAAI,CAACjB,gBAAN,CAApB,CAAR;AACAc,MAAAA,QAAQ,CAACF,cAAc,CAACK,IAAI,CAACnB,MAAL,CAAY,CAAZ,CAAD,CAAf,CAAR;AACH,KALD;AAMH,GATD;AAUH,CAXM;AAcP,eAAeM,aAAf","sourcesContent":["import {heroApi} from '../api/api';\r\n\r\nconst SET_HEROES = \"SET_HEROES\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\r\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\r\nconst TAKE_HERO = \"TAKE_HERO\";\r\nconst UPDATE_INFO = 'UPDATE_INFO';\r\n\r\n\r\nlet initialState = {\r\n    heroes: [],\r\n    pageSize: 5,\r\n    totalHeroesCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    currentHero: 1,\r\n}\r\n\r\nconst heroesReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_HEROES:{\r\n            return {...state, heroes: action.heroes}\r\n        }\r\n        case SET_TOTAL_HEROES_COUNT:{\r\n            return {...state, totalHeroesCount: action.totalHeroesCount}\r\n        }\r\n        case TOOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TAKE_HERO:{\r\n            return {...state, currentHero: action.currentHero}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setHeroes = (heroes) => ({\r\n    type: SET_HEROES, heroes\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n});\r\nexport const setTotalHeroesCount = (totalHeroesCount) => ({\r\n    type: SET_TOTAL_HEROES_COUNT, totalHeroesCount\r\n});\r\nexport const setIsFetching = (isFetching) => ({\r\n    type: TOOGLE_IS_FETCHING, isFetching\r\n});\r\nexport const setCurrentHero = (currentHero) => ({\r\n    type: TAKE_HERO, currentHero\r\n});\r\n\r\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\r\n    return(dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        heroApi.getHeroes(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setHeroes(data.heroes));\r\n            dispatch(setTotalHeroesCount(data.totalHeroesCount));\r\n            dispatch(setCurrentHero(data.heroes[1]));\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default heroesReducer;"]},"metadata":{},"sourceType":"module"}