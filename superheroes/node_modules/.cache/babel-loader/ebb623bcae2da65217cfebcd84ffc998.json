{"ast":null,"code":"import { heroApi } from '../api/api';\nconst SET_HEROES = \"SET_HEROES\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\nconst TAKE_HERO = \"TAKE_HERO\";\nconst UPDATE_INFO = 'UPDATE_INFO';\nlet initialState = {\n  heroes: [],\n  pageSize: 5,\n  totalHeroesCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  currentHero: 1,\n  currentInfo: {}\n};\n\nconst heroesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_HEROES:\n      {\n        return { ...state,\n          heroes: action.heroes\n        };\n      }\n\n    case SET_TOTAL_HEROES_COUNT:\n      {\n        return { ...state,\n          totalHeroesCount: action.totalHeroesCount\n        };\n      }\n\n    case TOOGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TAKE_HERO:\n      {\n        return { ...state,\n          currentHero: action.currentHero\n        };\n      }\n\n    case UPDATE_INFO:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.currentInfo = action.currentInfo;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setHeroes = heroes => ({\n  type: SET_HEROES,\n  heroes\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalHeroesCount = totalHeroesCount => ({\n  type: SET_TOTAL_HEROES_COUNT,\n  totalHeroesCount\n});\nexport const setIsFetching = isFetching => ({\n  type: TOOGLE_IS_FETCHING,\n  isFetching\n});\nexport const setCurrentHero = currentHero => ({\n  type: TAKE_HERO,\n  currentHero\n});\nexport const updateHeroInfo = currentInfo => ({\n  type: UPDATE_INFO,\n  currentInfo\n});\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setIsFetching(true));\n    heroApi.getHeroes(currentPage, pageSize).then(data => {\n      dispatch(setIsFetching(false));\n      dispatch(setHeroes(data.heroes));\n      dispatch(setTotalHeroesCount(data.totalHeroesCount));\n      dispatch(setCurrentHero(data.heroes[1]));\n    });\n  };\n};\nexport default heroesReducer;","map":{"version":3,"sources":["D:/www/apache/Apache24/htdocs/superheroes/superheroes/src/redux/heroesReducer.js"],"names":["heroApi","SET_HEROES","SET_CURRENT_PAGE","SET_TOTAL_HEROES_COUNT","TOOGLE_IS_FETCHING","TAKE_HERO","UPDATE_INFO","initialState","heroes","pageSize","totalHeroesCount","currentPage","isFetching","currentHero","currentInfo","heroesReducer","state","action","type","stateCopy","setHeroes","setCurrentPage","setTotalHeroesCount","setIsFetching","setCurrentHero","updateHeroInfo","getHeroesThunkCreator","dispatch","getHeroes","then","data"],"mappings":"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","sourcesContent":["import {heroApi} from '../api/api';\r\n\r\nconst SET_HEROES = \"SET_HEROES\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\r\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\r\nconst TAKE_HERO = \"TAKE_HERO\";\r\nconst UPDATE_INFO = 'UPDATE_INFO';\r\n\r\n\r\nlet initialState = {\r\n    heroes: [],\r\n    pageSize: 5,\r\n    totalHeroesCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    currentHero: 1,\r\n    currentInfo: {}\r\n}\r\n\r\nconst heroesReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_HEROES:{\r\n            return {...state, heroes: action.heroes}\r\n        }\r\n        case SET_TOTAL_HEROES_COUNT:{\r\n            return {...state, totalHeroesCount: action.totalHeroesCount}\r\n        }\r\n        case TOOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TAKE_HERO:{\r\n            return {...state, currentHero: action.currentHero}\r\n        }\r\n        case UPDATE_INFO:{\r\n            let stateCopy = {...state};\r\n            stateCopy.currentInfo = action.currentInfo;\r\n            return stateCopy;\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setHeroes = (heroes) => ({\r\n    type: SET_HEROES, heroes\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n});\r\nexport const setTotalHeroesCount = (totalHeroesCount) => ({\r\n    type: SET_TOTAL_HEROES_COUNT, totalHeroesCount\r\n});\r\nexport const setIsFetching = (isFetching) => ({\r\n    type: TOOGLE_IS_FETCHING, isFetching\r\n});\r\nexport const setCurrentHero = (currentHero) => ({\r\n    type: TAKE_HERO, currentHero\r\n});\r\nexport const updateHeroInfo = (currentInfo) => ({\r\n    type: UPDATE_INFO, currentInfo\r\n});\r\n\r\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\r\n    return(dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        heroApi.getHeroes(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setHeroes(data.heroes));\r\n            dispatch(setTotalHeroesCount(data.totalHeroesCount));\r\n            dispatch(setCurrentHero(data.heroes[1]));\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default heroesReducer;"]},"metadata":{},"sourceType":"module"}