{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\apache\\\\Apache24\\\\htdocs\\\\superheroes\\\\superheroes\\\\src\\\\components\\\\Heroes\\\\HeroesContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrentPage, setTotalHeroesCount, setIsFetching, setCurrentHero, getHeroesThunkCreator } from '../../redux/heroesReducer';\nimport Heroes from './Heroes';\nimport Preloader from '../Preloader/Preloader';\n\nclass HeroesContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\n    };\n\n    this.prevPage = () => {\n      if (this.state.min >= 1) {\n        this.state.min--;\n        this.state.max--;\n        let pageNumber = this.props.currentPage;\n        pageNumber -= 1;\n        this.props.setCurrentPage(pageNumber);\n        this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\n      }\n    };\n\n    this.nextPage = () => {\n      if (this.state.max < this.props.totalHeroesCount) {\n        this.state.min++;\n        this.state.max++;\n        let pageNumber = this.props.currentPage;\n        pageNumber += 1;\n        this.props.setCurrentPage(pageNumber);\n        this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\n      }\n    };\n\n    this.showHero = id => {\n      this.props.setCurrentPhoto(id);\n      console.log(id);\n    };\n\n    this.state = {\n      min: 0,\n      max: 5\n    };\n  }\n\n  componentDidMount() {\n    this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Heroes, {\n      totalHeroesCount: this.props.totalHeroesCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      prevPage: this.prevPage,\n      nextPage: this.nextPage,\n      heroes: this.props.heroes,\n      min: this.state.min,\n      max: this.state.max,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    heroes: state.heroesReducer.heroes,\n    pageSize: state.heroesReducer.pageSize,\n    totalHeroesCount: state.heroesReducer.totalHeroesCount,\n    currentPage: state.heroesReducer.currentPage,\n    isFetching: state.heroesReducer.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCurrentPage,\n  setTotalHeroesCount,\n  setIsFetching,\n  getHeroesThunkCreator,\n  setCurrentHero\n})(HeroesContainer);","map":{"version":3,"sources":["D:/www/apache/Apache24/htdocs/superheroes/superheroes/src/components/Heroes/HeroesContainer.jsx"],"names":["React","connect","setCurrentPage","setTotalHeroesCount","setIsFetching","setCurrentHero","getHeroesThunkCreator","Heroes","Preloader","HeroesContainer","Component","constructor","props","onPageChanged","pageNumber","currentPage","pageSize","prevPage","state","min","max","nextPage","totalHeroesCount","showHero","id","setCurrentPhoto","console","log","componentDidMount","render","isFetching","heroes","mapStateToProps","heroesReducer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setCurrentPage, setTotalHeroesCount, setIsFetching, setCurrentHero, getHeroesThunkCreator} from '../../redux/heroesReducer';\r\nimport Heroes from './Heroes';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\n\r\nclass HeroesContainer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            min: 0,\r\n            max: 5\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    prevPage = () => {\r\n        if(this.state.min >= 1){\r\n            this.state.min--;\r\n            this.state.max--;\r\n            let pageNumber = this.props.currentPage;\r\n            pageNumber -= 1;\r\n            this.props.setCurrentPage(pageNumber);\r\n            this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n    nextPage = () => {\r\n        if(this.state.max < this.props.totalHeroesCount){\r\n            this.state.min++;\r\n            this.state.max++;\r\n            let pageNumber = this.props.currentPage;\r\n            pageNumber += 1;\r\n            this.props.setCurrentPage(pageNumber);\r\n            this.props.getHeroesThunkCreator(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n    showHero = (id) =>{\r\n        this.props.setCurrentPhoto(id);\r\n        console.log(id);\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.isFetching ? <Preloader/>:\r\n                <Heroes totalHeroesCount={this.props.totalHeroesCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        prevPage={this.prevPage}\r\n                        nextPage={this.nextPage}\r\n                        heroes={this.props.heroes}\r\n                        min={this.state.min}\r\n                        max={this.state.max}/>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        heroes: state.heroesReducer.heroes,\r\n        pageSize: state.heroesReducer.pageSize,\r\n        totalHeroesCount: state.heroesReducer.totalHeroesCount,\r\n        currentPage: state.heroesReducer.currentPage,\r\n        isFetching: state.heroesReducer.isFetching\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    setCurrentPage,\r\n    setTotalHeroesCount,\r\n    setIsFetching,\r\n    getHeroesThunkCreator,\r\n    setCurrentHero\r\n})(HeroesContainer);"]},"metadata":{},"sourceType":"module"}