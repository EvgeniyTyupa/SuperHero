{"ast":null,"code":"import { heroApi } from '../api/api';\nconst SET_HEROES = \"SET_HEROES\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\nlet initialState = {\n  heroes: [],\n  pageSize: 5,\n  totalHeroesCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst heroReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport const setHeroes = heroes => ({\n  type: SET_HEROES,\n  heroes\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalHeroesCount = totalHeroesCount => ({\n  type: SET_TOTAL_HEROES_COUNT,\n  totalHeroesCount\n});\nexport const setIsFetching = isFetching => ({\n  type: TOOGLE_IS_FETCHING,\n  isFetching\n});\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setIsFetching(true));\n    heroApi.getHeroes(currentPage, pageSize).then(data => {\n      dispatch(setIsFetching(false));\n      dispatch(setHeroes(data));\n      dispatch(setTotalHeroesCount(totalHeroesCount));\n      console.log(data);\n    });\n  };\n};\nexport default heroReducer;","map":{"version":3,"sources":["D:/www/apache/Apache24/htdocs/superheroes/superheroes/src/redux/heroReducer.js"],"names":["heroApi","SET_HEROES","SET_CURRENT_PAGE","SET_TOTAL_HEROES_COUNT","TOOGLE_IS_FETCHING","initialState","heroes","pageSize","totalHeroesCount","currentPage","isFetching","heroReducer","state","action","type","setHeroes","setCurrentPage","setTotalHeroesCount","setIsFetching","getHeroesThunkCreator","dispatch","getHeroes","then","data","console","log"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,gBAAgB,EAAE,CAHH;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAIH,CALD;;AAQA,OAAO,MAAMG,SAAS,GAAIT,MAAD,KAAa;AAClCQ,EAAAA,IAAI,EAAEb,UAD4B;AAChBK,EAAAA;AADgB,CAAb,CAAlB;AAGP,OAAO,MAAMU,cAAc,GAAIP,WAAD,KAAkB;AAC5CK,EAAAA,IAAI,EAAEZ,gBADsC;AACpBO,EAAAA;AADoB,CAAlB,CAAvB;AAGP,OAAO,MAAMQ,mBAAmB,GAAIT,gBAAD,KAAuB;AACtDM,EAAAA,IAAI,EAAEX,sBADgD;AACxBK,EAAAA;AADwB,CAAvB,CAA5B;AAGP,OAAO,MAAMU,aAAa,GAAIR,UAAD,KAAiB;AAC1CI,EAAAA,IAAI,EAAEV,kBADoC;AAChBM,EAAAA;AADgB,CAAjB,CAAtB;AAIP,OAAO,MAAMS,qBAAqB,GAAG,CAACV,WAAD,EAAcF,QAAd,KAA2B;AAC5D,SAAOa,QAAD,IAAc;AAChBA,IAAAA,QAAQ,CAACF,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAlB,IAAAA,OAAO,CAACqB,SAAR,CAAkBZ,WAAlB,EAA+BF,QAA/B,EAAyCe,IAAzC,CAA8CC,IAAI,IAAI;AAClDH,MAAAA,QAAQ,CAACF,aAAa,CAAC,KAAD,CAAd,CAAR;AACAE,MAAAA,QAAQ,CAACL,SAAS,CAACQ,IAAD,CAAV,CAAR;AACAH,MAAAA,QAAQ,CAACH,mBAAmB,CAACT,gBAAD,CAApB,CAAR;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALD;AAMH,GATD;AAUH,CAXM;AAcP,eAAeZ,WAAf","sourcesContent":["import {heroApi} from '../api/api';\r\n\r\nconst SET_HEROES = \"SET_HEROES\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_HEROES_COUNT = \"SET_TOTAL_HEROES_COUNT\";\r\nconst TOOGLE_IS_FETCHING = \"TOOGLE_IS_FETCHING\";\r\n\r\n\r\nlet initialState = {\r\n    heroes: [],\r\n    pageSize: 5,\r\n    totalHeroesCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst heroReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setHeroes = (heroes) => ({\r\n    type: SET_HEROES, heroes\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n});\r\nexport const setTotalHeroesCount = (totalHeroesCount) => ({\r\n    type: SET_TOTAL_HEROES_COUNT, totalHeroesCount\r\n});\r\nexport const setIsFetching = (isFetching) => ({\r\n    type: TOOGLE_IS_FETCHING, isFetching\r\n});\r\n\r\nexport const getHeroesThunkCreator = (currentPage, pageSize) => {\r\n    return(dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        heroApi.getHeroes(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setHeroes(data));\r\n            dispatch(setTotalHeroesCount(totalHeroesCount));\r\n            console.log(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default heroReducer;"]},"metadata":{},"sourceType":"module"}